@page "/Brand"
@using BikeStore.UI.Contracts.Interface
@using BikeStore.UI.ViewModel
@inject IBrandApi _brandApi
<SectionContent SectionName="page-title">
    <MudChip T="string" Icon="@Icons.Material.Filled.Menu" Size="Size.Large" Color="Color.Dark" IconColor="Color.Success">Brands</MudChip>
</SectionContent>



<MudCard Class="m-2">
    <MudTabs Elevation="2" Rounded="true" Centered="true">
        <MudTabPanel Text="Active" BadgeData='@BrandVM.ActiveBrandCount'>

            <BrandDataGrid OnCountChange="@BrandVM.GetBrandCount" Status="Active" BrandVM="BrandVM"></BrandDataGrid>
        </MudTabPanel>
        <MudTabPanel Text="Inactive" BadgeData='@BrandVM.InactiveBrandCount'  BadgeColor="Color.Dark" >
            <BrandDataGrid OnCountChange="@BrandVM.GetBrandCount" Status="InActive" BrandVM="BrandVM"></BrandDataGrid>
        </MudTabPanel>
        @* <MudTabPanel Text="Up Coming" BadgeData='"N"' /> *@

    </MudTabs>

</MudCard>

@code {
    BrandViewModel BrandVM;

    protected override async Task OnInitializedAsync()
    {
        BrandVM = new BrandViewModel(_brandApi);
        await Task.CompletedTask;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) {
            await BrandVM.GetBrandCount();
            StateHasChanged();
        }
    }
      
    

}

