@page "/Store"
@using BikeStore.UI.Contracts.Interface

<SectionContent SectionName="page-title">
    <MudChip T="string" Icon="@Icons.Material.Filled.Store" Size="Size.Large" Color="Color.Dark" IconColor="Color.Success">Stores</MudChip>
</SectionContent>



<MudCard Class="m-2">
    <MudTabs Elevation="2" Rounded="true" Centered="true">
        <MudTabPanel Text="Active" BadgeData='@ActiveStoreCount'>

            @* <StoreDa OnCountChange="getCategoriesCount" Status="Active"></StoreDa> *@
        </MudTabPanel>
        <MudTabPanel Text="Inactive" BadgeData='@InactiveStoreCount'  BadgeColor="Color.Dark" >
            @* <CategoryDataGrid OnCountChange="getCategoriesCount" Status="InActive"></CategoryDataGrid> *@
        </MudTabPanel>
    </MudTabs>

</MudCard>

@code {

    [Inject]
    private IStoreApi _storeApi{ get; set; }    
    private int?  ActiveStoreCount{get;set;}=0;
    private int?  InactiveStoreCount{get;set;}=0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) {
            await getCategoriesCount();
            StateHasChanged();
        }
    }

    private async Task getCategoriesCount() 
    { 
        var result = await _storeApi.GetStoreCountAsync();
        
        if (result.Data is { })
        {
            ActiveStoreCount   = result.Data.ActiveStoreCount;
            InactiveStoreCount = result.Data.InactiveStoreCount;
            StateHasChanged();
        }
    }

}